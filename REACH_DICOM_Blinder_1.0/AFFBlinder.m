function AFFBlinder(hObject, handles, AFFoutput, AFFheader, folder_name2, file_name3, blindflag)

try 

Modality_WhiteList = {...
    'CR';...
    'DX';...
    'RG';...
    'RF';...
    'CT';...
    'MR';...
    };

col_Filename =          indcfind(AFFheader','^Filename$','regexpi');
col_isDICOM =           indcfind(AFFheader','^IsDICOM$','regexpi');
col_PatientID =         indcfind(AFFheader','^PatientID$','regexpi');
col_StudyDate =         indcfind(AFFheader','^StudyDate$','regexpi');
col_Modality =          indcfind(AFFheader','^Modality$','regexpi');
col_MediaStorage =      indcfind(AFFheader','^MediaStorageSOPClassUID$','regexpi');
col_StudyInstanceUID =  indcfind(AFFheader','^StudyInstanceUID$','regexpi');
col_SeriesInstanceUID = indcfind(AFFheader','^SeriesInstanceUID$','regexpi');

% read blinding spreadsheet
AFFblind = AFFreaddlm(file_name3,',');
col_CPR = 1;
col_BogusID = 2;
col_SurgeryDate = 3;
if(~isempty(indcfind(AFFblind(1,:)','^CPR$','regexpi')))
    col_CPR =       indcfind(AFFblind(1,:)','^CPR$','regexpi');
end
if(~isempty(indcfind(AFFblind(1,:)','^BogusID$','regexpi')))
    col_BogusID =   indcfind(AFFblind(1,:)','^BogusID$','regexpi');
end
if(~isempty(indcfind(AFFblind(1,:)','^Date_of_surgery$','regexpi')))
    col_SurgeryDate =   indcfind(AFFblind(1,:)','^Date_of_surgery$','regexpi');
end
AFFblind(:,col_CPR) = cellfun(@num2str,AFFblind(:,col_CPR),'UniformOutput',0);
AFFblind(:,col_BogusID) = cellfun(@num2str,AFFblind(:,col_BogusID),'UniformOutput',0);

if(~exist(folder_name2))
    mkdir(folder_name2);
end
dcmodify_str = which('dcmodify.exe');

for ix=2:size(AFFoutput,1) %loop through files
    
    try
    
    %/
    handles.activefile =    AFFoutput{ix,col_Filename};
    guidata(hObject,handles);
    
    tmp_isdcm =             AFFoutput{ix,col_isDICOM};

    if(strcmpi('yes',tmp_isdcm)) %continue if DICOM file

        tmpf_in =           AFFoutput{ix,col_Filename};
        tmp_PatientID =     strtrim(num2str(AFFoutput{ix,col_PatientID}));
        tmp_StudyDate =     AFFoutput{ix,col_StudyDate};
        tmp_Modality =      AFFoutput{ix,col_Modality};
        tmp_MediaStorage =  AFFoutput{ix,col_MediaStorage};
        tmp_StudyUID =      AFFoutput{ix,col_StudyInstanceUID};
        tmp_SeriesUID =     AFFoutput{ix,col_SeriesInstanceUID};

        if(~strcmpi('.',tmp_PatientID))
            
            switch blindflag % blind or un-blind
                case 1
                    jx = indcfind(AFFblind(:,col_CPR),horzcat('^',tmp_PatientID,'$'),'regexpi');
                case -1
                    jx = indcfind(AFFblind(:,col_BogusID),horzcat('^',tmp_PatientID),'regexpi');
                otherwise
                    jx = [];
            end
            
        else
            jx = [];
        end
        
        blindqualifier = 0;
        switch blindflag
            case 1
                if(~isempty(jx) && ~strcmpi('.',tmp_StudyDate) && ismember(tmp_Modality,Modality_WhiteList))
                    %continue if CPR found, and StudyDate is valid format
                    blindqualifier = 1;
                end
                
            case -1
                if(~isempty(jx))
                    %continue if BogusID found
                    blindqualifier = 1;
                end
                if(~strcmpi('.',tmp_StudyDate))
                    tmp_StudyDate = '1';
                end
                
            otherwise 
                blindqualifier = 0;
        end

        if(blindqualifier) % continue if ID qualifies

            switch blindflag
                case 1
                    new_BogusID =   strtrim(AFFblind{jx(1),col_BogusID});
                    Surgery_Date =  AFFblind{jx(1),col_SurgeryDate};

                    new_ID = regexpi(new_BogusID,'^AF[0-9]{5}','match');
                    if(~isempty(new_ID)); 
                        new_ID = upper(new_ID{1});
                    else
                        new_ID = 'AF_____';
                    end
                    new_Name = regexpi(new_BogusID,'[A-Z]{4}$','match');
                    if(~isempty(new_Name)); 
                        new_Name = horzcat(upper(new_Name{1}),'^^^^');
                    else
                        new_Name = 'XXXX^^^^';
                    end
                    tmp_dn = datenum(tmp_StudyDate,'yyyymmdd'); 
                    surgery_dn = floor(datenum(Surgery_Date));
                    
                    if(abs(surgery_dn-tmp_dn)<=14) %continue if Surgery Date within window
                        datequalifier = 1;
                    else
                        datequalifier = 0;
                    end
            
                case -1
                    new_CPR =   strtrim(AFFblind{jx(1),col_CPR});
                    new_ID = new_CPR;
                    new_Name  = horzcat(new_CPR,'^^^^');
                    datequalifier = 1;
                    
                otherwise
                    datequalifier = 0;
            end

            

            

            if(datequalifier) % continue if date qualifies
                %/
                if(~isempty(tmp_StudyUID))
                    new_uid_study =     tmp_StudyUID;
                else
                    new_uid_study =     dicomuid;
                end
                if(~isempty(tmp_SeriesUID))
                    new_uid_series =     tmp_SeriesUID;
                else
                    new_uid_series =    dicomuid;
                end
                new_uid_instance =  dicomuid;

                tmpf_out = folder_name2;
                if(~strcmpi(tmpf_out(end),'\'));
                    tmpf_out = horzcat(tmpf_out,'\');
                end
                
                if(~strcmpi(strtrim(tmp_MediaStorage),'1.2.840.10008.5.1.4.1.1.7')) %file MediaStorageSOPClassUID is NOT SecondaryCaptureImageStorage
                    tmpf_out = horzcat(tmpf_out,new_ID,'\',tmp_StudyDate,'\',new_uid_instance,'.dcm');
                else
                    tmpf_out = horzcat(tmpf_out,'SecondaryCaptureImages\',new_ID,'\',tmp_StudyDate,'\',new_uid_instance,'.dcm');
                end
                
                [p_out,f_out,e_out]=fileparts(tmpf_out);
                if(~exist(p_out));
                    mkdir(p_out);
                end

                copyfile(tmpf_in,tmpf_out);
                anon_flag = 0;
                
                switch blindflag
                    
                    case 1
                        %%
                        try
                            dicomanon(tmpf_out,tmpf_out,'keep',{'PatientID','PatientName','StudyDate','StudyTime','StudyDescription'},'UseVRHeuristic',false);
                        catch anon_err
                            anon_flag = 1;
                        end

                        metatags = {...
                            '(0010,0020)',new_ID,'i';...
                            '(0010,0010)',new_Name,'i';...
                            '(0020,000D)',new_uid_study,'i';...
                            '(0020,000E)',new_uid_series,'i';...
                            '(0008,0018)',new_uid_instance,'i';...
                            '(0008,0050)','','e';...
                            '(0008,0081)','','e';...
                            '(0008,103E)','','e';...
                            '(0010,0021)','','e';...
                            '(0010,0030)','','e';...
                            '(0010,0040)','','e';...
                            '(0010,1000)','','e';...
                            '(0010,1010)','','e';...
                            '(0010,21B0)','','e';...
                            '(0032,1060)','','e';...
                            '(0040,0254)','','e';...
                            '(0008,1120)','','e';...
                            '(0008,1140)','','e';...
                            '(0008,0090)','','e';...
                            '(0008,0096)','','e';...
                            '(0008,1032)','','e';...
                            '(0008,1048)','','e';...
                            '(0008,1049)','','e';...
                            '(0008,1050)','','e';...
                            '(0008,1052)','','e';...
                            '(0008,1060)','','e';...
                            '(0008,1062)','','e';...
                            '(0008,1110)','','e';...
                            '(0008,1111)','','e';...
                            '(0008,1250)','','e';...
                            '(0008,9092)','','e';...
                            '(0010,0032)','','e';...
                            '(0010,0050)','','e';...
                            '(0010,0101)','','e';...
                            '(0010,1001)','','e';...
                            '(0010,1002)','','e';...
                            '(0010,1005)','','e';...
                            '(0010,1040)','','e';...
                            '(0010,1060)','','e';...
                            '(0010,1080)','','e';...
                            '(0010,1081)','','e';...
                            '(0010,1090)','','e';...
                            '(0010,2000)','','e';...
                            '(0010,2110)','','e';...
                            '(0010,2150)','','e';...
                            '(0010,2152)','','e';...
                            '(0010,2154)','','e';...
                            '(0010,2160)','','e';...
                            '(0010,2180)','','e';...
                            '(0010,21A0)','','e';...
                            '(0010,21B0)','','e';...
                            '(0010,21C0)','','e';...
                            '(0010,21D0)','','e';...
                            '(0010,21F0)','','e';...
                            '(0010,2203)','','e';...
                            '(0010,2297)','','e';...
                            '(0010,2298)','','e';...
                            '(0010,2299)','','e';...
                            '(0019,161B)','','e';...
                            '(0020,9221)','','e';...
                            '(0020,9222)','','e';...
                            '(0033,1013)','','e';...
                            '(0038,0010)','','e';...
                            '(0038,0011)','','e';...
                            '(0038,0060)','','e';...
                            '(0038,0061)','','e';...
                            '(0038,0062)','','e';...
                            '(0038,0500)','','e';...
                            '(0038,0100)','','e';...
                            '(0040,0260)','','e';...
                            '(0088,0130)','','e';...
                            '(0088,0140)','','e';...
                            '(5200,9299)','','e';...
                            '(0008,0082)','','e';...
                            '(0008,0092)','','e';...
                            '(0008,0094)','','e';...
                            '(0008,010D)','','e';...
                            '(0008,1010)','','e';...
                            '(0008,1070)','','e';...
                            '(0008,1072)','','e';...
                            '(0008,1080)','','e';...
                            '(0008,1084)','','e';...
                            '(0008,1195)','','e';...
                            '(0008,2111)','','e';...
                            '(0008,2112)','','e';...
                            '(0008,3010)','','e';...
                            '(0008,4000)','','e';...
                            '(0008,9123)','','e';...
                            '(0010,0102)','','e';...
                            '(0010,1020)','','e';...
                            '(0010,1030)','','e';...
                            '(0010,1050)','','e';...
                            '(0010,4000)','','e';...
                            '(0018,0010)','','e';...
                            '(0018,1030)','','e';...
                            '(0018,1400)','','e';...
                            '(0018,4000)','','e';...
                            '(0018,9424)','','e';...
                            '(0018,A003)','','e';...
                            '(0020,3401)','','e';...
                            '(0020,3404)','','e';...
                            '(0020,3406)','','e';...
                            '(0020,4000)','','e';...
                            '(0020,9158)','','e';...
                            '(0032,0012)','','e';...
                            '(0032,1020)','','e';...
                            '(0032,1021)','','e';...
                            '(0032,1030)','','e';...
                            '(0032,1032)','','e';...
                            '(0032,1033)','','e';...
                            '(0032,1070)','','e';...
                            '(0032,4000)','','e';...
                            '(0038,001E)','','e';...
                            '(0038,0020)','','e';...
                            '(0038,0021)','','e';...
                            '(0038,0040)','','e';...
                            '(0038,0050)','','e';...
                            '(0038,0300)','','e';...
                            '(0038,0400)','','e';...
                            '(0038,1234)','','e';...
                            '(0038,4000)','','e';...
                            '(0040,0001)','','e';...
                            '(0040,0002)','','e';...
                            '(0040,0003)','','e';...
                            '(0040,0004)','','e';...
                            '(0040,0005)','','e';...
                            '(0040,0006)','','e';...
                            '(0040,0007)','','e';...
                            '(0040,000B)','','e';...
                            '(0040,0010)','','e';...
                            '(0040,0011)','','e';...
                            '(0040,0012)','','e';...
                            '(0040,0241)','','e';...
                            '(0040,0242)','','e';...
                            '(0040,0243)','','e';...
                            '(0040,0244)','','e';...
                            '(0040,0245)','','e';...
                            '(0040,0248)','','e';...
                            '(0040,0253)','','e';...
                            '(0040,0275)','','e';...
                            '(0040,0280)','','e';...
                            '(0040,0555)','','e';...
                            '(0040,1001)','','e';...
                            '(0040,1004)','','e';...
                            '(0040,1005)','','e';...
                            '(0040,1010)','','e';...
                            '(0040,1011)','','e';...
                            '(0040,1101)','','e';...
                            '(0040,1102)','','e';...
                            '(0040,1103)','','e';...
                            '(0040,1400)','','e';...
                            '(0040,2001)','','e';...
                            '(0040,2008)','','e';...
                            '(0040,2009)','','e';...
                            '(0040,2010)','','e';...
                            '(0040,2016)','','e';...
                            '(0040,2017)','','e';...
                            '(0040,2400)','','e';...
                            '(0040,3001)','','e';...
                            '(0040,4023)','','e';...
                            '(0040,4025)','','e';...
                            '(0040,4027)','','e';...
                            '(0040,4030)','','e';...
                            '(0040,4034)','','e';...
                            '(0040,4035)','','e';...
                            '(0040,4036)','','e';...
                            '(0040,4037)','','e';...
                            '(0040,A027)','','e';...
                            '(0040,A073)','','e';...
                            '(0040,A075)','','e';...
                            '(0040,A078)','','e';...
                            '(0040,A07A)','','e';...
                            '(0040,A07C)','','e';...
                            '(0040,A088)','','e';...
                            '(0040,A123)','','e';...
                            '(0040,A124)','','e';...
                            '(0040,A730)','','e';...
                            '(0040,DB0C)','','e';...
                            '(0040,DB0D)','','e';...
                            '(0070,0001)','','e';...
                            '(0070,0084)','','e';...
                            '(0070,0086)','','e';...
                            '(0070,031A)','','e';...
                            '(0088,0200)','','e';...
                            '(0088,0904)','','e';...
                            '(0088,0906)','','e';...
                            '(0088,0910)','','e';...
                            '(0088,0912)','','e';...
                            '(0400,0100)','','e';...
                            '(0400,0402)','','e';...
                            '(0400,0403)','','e';...
                            '(0400,0404)','','e';...
                            '(0400,0550)','','e';...
                            '(0400,0561)','','e';...
                            '(2030,0020)','','e';...
                            '(0020,0052)','','e';...
                            '(0020,0200)','','e';...
                            '(0020,9161)','','e';...
                            '(0020,9164)','','e';...
                            '(0028,1199)','','e';...
                            '(0028,1214)','','e';...
                            '(0028,4000)','','e';...
                            '(3006,0024)','','e';...
                            '(3006,00C2)','','e';...
                            '(300A,0013)','','e';...
                            '(300E,0008)','','e';...
                            '(4000,0010)','','e';...
                            '(4000,4000)','','e';...
                            '(4008,0042)','','e';...
                            '(4008,0102)','','e';...
                            '(4008,010A)','','e';...
                            '(4008,010B)','','e';...
                            '(4008,010C)','','e';...
                            '(4008,0111)','','e';...
                            '(4008,0114)','','e';...
                            '(4008,0115)','','e';...
                            '(4008,0118)','','e';...
                            '(4008,0119)','','e';...
                            '(4008,011A)','','e';...
                            '(4008,0202)','','e';...
                            '(4008,0300)','','e';...
                            '(4008,4000)','','e';...
                            '(FFFA,FFFA)','','e';...
                            '(FFFC,FFFC)','','e';...
                            '(6000,3000)','','e';...
                            '(6000,4000)','','e';...
                            '(6002,3000)','','e';...
                            '(6002,4000)','','e';...
                            '(6004,3000)','','e';...
                            '(6004,4000)','','e';...
                            '(6006,3000)','','e';...
                            '(6006,4000)','','e';...
                            '(6008,3000)','','e';...
                            '(6008,4000)','','e';...
                            '(6010,3000)','','e';...
                            '(6010,4000)','','e';...
                            '(5000,0022)','','e';...
                            '(5000,0110)','','e';...
                            '(5000,3000)','','e';...
                            '(5002,0022)','','e';...
                            '(5002,0110)','','e';...
                            '(5002,3000)','','e';...
                            '(5004,0022)','','e';...
                            '(5004,0110)','','e';...
                            '(5004,3000)','','e';...
                            '','','ep';...
                            '','','imt';
                            };
                    case -1
                        %%
                        copyfile(tmpf_in,tmpf_out);

                        metatags = {...
                            '(0010,0020)',new_ID,'i';...
                            '(0010,0010)',new_Name,'i';...
                            '(0008,1030)','AFF','i';...
                            '(0020,000D)',new_uid_study,'i';...
                            '(0020,000E)',new_uid_series,'i';...
                            '(0008,0018)',new_uid_instance,'i';...
                            '','','ep';...
                            };
                        
                    otherwise 
                        metatags = {};
                end

                if(~isempty(metatags))
                    [status,result] = AFFdcmmod(dcmodify_str,tmpf_out,metatags);
                    
                    if(blindflag>eps && anon_flag>eps) %try dicomanon again if erred first time
                        dicomanon(tmpf_out,tmpf_out,'keep',{'PatientID','PatientName','StudyDate','StudyTime','StudyDescription'},'UseVRHeuristic',false);
                        [status,result] = AFFdcmmod(dcmodify_str,tmpf_out,metatags);
                    end
                    
                end

                %\
            end

        end

    end

    %\
    
    % try-catch blind file
    catch blindferr
        
        err_out = {'Blinding',blindferr.message,handles.activefile};
    
        handles.errorlog =    [handles.errorlog; err_out];
        guidata(hObject,handles);
        
    end
    
end

% try-catch whole subfunc
catch subfuncerr
    
    err_out = {'Blinding',subfuncerr.message,'.'};
    
    handles.errorlog =    [handles.errorlog; err_out];
    guidata(hObject,handles);
    
end